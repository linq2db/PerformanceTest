<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\T4Model.ttinclude"               #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\NotifyPropertyChanged.ttinclude" #>
<#
	Model.Namespace.Name = "PerformanceTest.Views.TestControl";

	Model.Usings.AddRange(new[]
	{
		"System.Collections.ObjectModel",
	});

	Model.Types.Add(
		new Class("MethodViewModel", new[]
		{
			new NotifyingProperty("string", "Name",   "DisplayName"),
			new NotifyingProperty("long",   "Repeat", "DisplayName"),
			new NotifyingProperty("long?",  "Take",   "DisplayName"),
			new NotifyingProperty("string", "DisplayName").InitGetter("Name + \" / \" + Repeat + (Take.HasValue ? \" / \" + Take : \"\")"),

			new NotifyingProperty("ObservableCollection<TimeViewModel>", "Times"),
		}));

	GenerateModel();
#>
